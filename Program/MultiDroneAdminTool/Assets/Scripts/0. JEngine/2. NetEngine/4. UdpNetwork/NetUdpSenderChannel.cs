using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Sockets;
using System.Threading.Tasks;

namespace J2y.Network
{


	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//
	// NetUdpSenderChannel
	//
	//
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	public class NetUdpSenderChannel : NetSenderChannel_base
	{
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// Variable
		//
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


		#region [Variable] Base
		private NetUdpPeer_base _udp_peer;
		#endregion



		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// 0. Base Methods
		//
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

		#region [Init]
		//------------------------------------------------------------------------------------------------------------------------------------------------------
		internal NetUdpSenderChannel(NetPeer_base netpeer)
			: base(netpeer, 0)
		{
			_udp_peer = netpeer as NetUdpPeer_base;
		}
		#endregion





		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// [IO 쓰레드] 메시지 송신
		//
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        
		#region [송신] [IO 쓰레드] [구현] 메시지(1개) 전송
		//------------------------------------------------------------------------------------------------------------------------------------------------------
		public override async Task write_message_async()
		{
			var net_client = _udp_peer._net_client;
			NetBuffer send_buffer = null;

			//--------------------------------------------------------------------
			// 1. Dequeue Send Buffer
			// 
			while (_queued_sends.Count > 0)
			{
				if (!_queued_sends.TryDequeue(out send_buffer))
					break;

				//--------------------------------------------------------------------
				// 2. 비동기 메시지 전송
				// 
				try
				{
					await net_client.SendAsync(send_buffer._buffer, send_buffer._size).ConfigureAwait(false);
				}
				catch (Exception e)
				{
					JLogger.WriteError("[ERROR]" + e.Message);
				}
			}
		}
		#endregion
		

	}

}
