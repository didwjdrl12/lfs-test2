using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Text;
using Newtonsoft.Json;

namespace J2y.MultiDroneUnity
{
    #region [enum] SpawnAreaType
    public enum eSpawnAreaType
    {
        Area, Point, Sphere,
    }
    #endregion

    #region [enum] MapName
    public enum eMapName
    {
        Africa,                     // ServerPort: 7777
        Blocks,
        CityEnviron,                // (large environment with moving vehicles and pedestrians)
        Coastline,
        Forest,
        LandscapeMountains,
        Neighborhood,
        SimpleMaze,
        TrapCam,
        ZhangJiaJie,
        Max,
    }
    #endregion

    #region [enum] ClientType
    public enum eClientType
    {
        Client, Launcher, AdminTool,
    }
    #endregion

    #region [enum] VehicleType
    public enum eVehicleType
    {
        Car, Multirotor, ComputerVision, Max,
    }
    #endregion

    #region [enum] ClientState
    public enum eClientState
    {
        None,
        Execute,
        Connect,
        Spawn,
        Playing,
    }
    #endregion

    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    //
    // Client (Unreal)
    //
    //
    //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    public class MdNetData_EnterRoom : JNetData
    {
        #region [변수] Base
        public int _size;
        public List<MdusNetClient_User> _users = new List<MdusNetClient_User>();
		//public bool _using_physx;

        #endregion
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // [IO 쓰레드] 메시지 패킹/파싱
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [IO 쓰레드] 메시지 패킹
        //----------------------------------------------------------------
        public override void Read(BinaryReader reader)
        {

        }
        #endregion

        #region [IO 쓰레드] 메시지 파싱
        //----------------------------------------------------------------
        public override void Write(BinaryWriter writer)
        {
            //writer.Write(_guid);
            writer.Write(_size);
            foreach(var user in _users)
            {
                //if (user.NetData._name != _name)
                    user.NetData.Write(writer);
            }
			//writer.Write(_using_physx);
        }
        #endregion
    }


    public class MdNetData_User : JNetData
    {
        #region [변수] Base
        public long _guid;

        //public int _name;
        public eVehicleType _vehicle_type;
        public int _vehicle_model = -1;
        public float[] _position = new float[3];
        public float[] _rotation = new float[4];
        public string _visible_name = "";
		#endregion

		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// [IO 쓰레드] 메시지 패킹/파싱
		//
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

		#region [IO 쓰레드] 메시지 패킹
		//----------------------------------------------------------------
		public override void Read(BinaryReader reader)
        {
            //_guid = reader.ReadInt64();
            
            _position[0] = reader.ReadSingle();
            _position[1] = reader.ReadSingle();
            _position[2] = reader.ReadSingle();

            _rotation[0] = reader.ReadSingle();
            _rotation[1] = reader.ReadSingle();
            _rotation[2] = reader.ReadSingle();
            _rotation[3] = reader.ReadSingle();

            _visible_name = ReadStringFromCPP(reader);
            //_visible_name = reader.ReadString();
        }
        //----------------------------------------------------------------
        public string ReadStringFromCPP(BinaryReader reader)
        {
            var size = reader.ReadInt32();
            var chars = reader.ReadChars(size);
            return string.Concat(chars);
        }
        #endregion

        #region [IO 쓰레드] 메시지 파싱
        //----------------------------------------------------------------
        public override void Write(BinaryWriter writer)
        {
            writer.Write(_guid);

            writer.Write((int)_vehicle_type);

            writer.Write((int)_vehicle_model);

            writer.Write(_position[0]);
            writer.Write(_position[1]);
            writer.Write(_position[2]);

            writer.Write(_rotation[0]);
            writer.Write(_rotation[1]);
            writer.Write(_rotation[2]);
            writer.Write(_rotation[3]);

            var code = Encoding.ASCII.GetBytes(_visible_name);
            writer.Write(code.Length);
            writer.Write(code);

            //writer.Write(Encoding.Default.GetBytes(_visible_name).Length);
            //writer.Write(_visible_name);
        }
        #endregion
    }

    public class MdNetData_Move : JNetData
    {
        #region [변수] Base
        public long _guid;
        public float[] _position = new float[3];
        public float[] _rotation = new float[4];
		public float[] _velocity = new float[3];
		public int _rotor_count = 0;
		public float[] _rotor_rotation = new float[6];
		#endregion

		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		// [IO 쓰레드] 메시지 패킹/파싱
		//
		//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

		#region [IO 쓰레드] 메시지 패킹
		//----------------------------------------------------------------
		public override void Read(BinaryReader reader)
        {
            _guid = reader.ReadInt64();
            _position[0] = reader.ReadSingle();
            _position[1] = reader.ReadSingle();
            _position[2] = reader.ReadSingle();
            _rotation[0] = reader.ReadSingle();
            _rotation[1] = reader.ReadSingle();
            _rotation[2] = reader.ReadSingle();
            _rotation[3] = reader.ReadSingle();
			_velocity[0] = reader.ReadSingle();
			_velocity[1] = reader.ReadSingle();
			_velocity[2] = reader.ReadSingle();
			_rotor_count = reader.ReadInt32();
			for (int i = 0; i < 6; ++i)
				_rotor_rotation[i] = reader.ReadSingle();
		}
        #endregion

        #region [IO 쓰레드] 메시지 파싱
        //----------------------------------------------------------------
        public override void Write(BinaryWriter writer)
        {
            writer.Write(_guid);
            writer.Write(_position[0]);
            writer.Write(_position[1]);
            writer.Write(_position[2]);
            writer.Write(_rotation[0]);
            writer.Write(_rotation[1]);
            writer.Write(_rotation[2]);
            writer.Write(_rotation[3]);
			writer.Write(_velocity[0]);
			writer.Write(_velocity[1]);
			writer.Write(_velocity[2]);
			writer.Write(_rotor_count);
			for (int i = 0; i < 6; ++i)
				writer.Write(_rotor_rotation[i]);
		}
        #endregion
    }

    public class MdNetData_Launcher : JNetData
    {
        #region [변수] Base
        public long _guid;
        public string _ip_address = "";
        public string _cpu_info = "";
        public string _memory_info = "";
        public Dictionary<string, int> _ports = new Dictionary<string, int>();

        #endregion

        #region [변수] Clients
        public List<MdNetData_Client> _clients = new List<MdNetData_Client>();
        #endregion

        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // [IO 쓰레드] 메시지 패킹/파싱
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [IO 쓰레드] 메시지 패킹
        //----------------------------------------------------------------
        public override void Read(BinaryReader reader)
        {
            //_guid = reader.ReadInt64();
            _ip_address = reader.ReadString();
            _cpu_info = reader.ReadString();
            _memory_info = reader.ReadString();
            ParsePorts(reader);
            ParseList(reader, _clients);
        }
        #endregion

        #region [IO 쓰레드] 메시지 파싱
        //----------------------------------------------------------------
        public override void Write(BinaryWriter writer)
        {
            writer.Write(_guid);
            writer.Write(_ip_address);
            writer.Write(_cpu_info);
            writer.Write(_memory_info);
            PackingPorts(writer);
            PackingList(writer, _clients);
        }
        #endregion

        #region [Util] 포트목록 파싱 & 패킹
        //----------------------------------------------------------------
        public void ParsePorts(BinaryReader reader)
        {
            var json = reader.ReadString();
            _ports = JsonConvert.DeserializeObject<Dictionary<string, int>>(json);
        }
        //----------------------------------------------------------------
        public void PackingPorts(BinaryWriter writer)
        {
            var json = JsonConvert.SerializeObject(_ports);
            writer.Write(json);
        }
        #endregion
    }

    public class MdNetData_AdminTool: JNetData
    {
        #region [변수] Base
        public long _guid;
        #endregion

        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // [IO 쓰레드] 메시지 패킹/파싱
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [IO 쓰레드] 메시지 패킹
        //----------------------------------------------------------------
        public override void Read(BinaryReader reader)
        {
            _guid = reader.ReadInt64();
        }
        #endregion

        #region [IO 쓰레드] 메시지 파싱
        //----------------------------------------------------------------
        public override void Write(BinaryWriter writer)
        {
            writer.Write(_guid);
        }
        #endregion
    }

    public class MdNetData_Client : JNetData
    {
        #region [변수] Config File
        public long _guid;
        public int _processId;
        public eMapName MapName = eMapName.Neighborhood;
        public string _config_filename = "";
        public string _vehicle_type = "Car";
        public int _script_server_port = 41451;
        public DateTime ConnectTime = DateTime.Now;
        public string VehicleVisibleName = "Car";
        #endregion

        #region [변수] Spawn Area
        public eSpawnAreaType SpawnAreaType = eSpawnAreaType.Area;
        public int SpawnAreaIndex = -1;
        public Vector3 SpawnPoint;
        public float SpawnSphereRadius = 100;
        #endregion

        public eClientState _state = eClientState.None;

        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        // [IO 쓰레드] 메시지 패킹/파싱
        //
        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        #region [IO 쓰레드] 메시지 패킹
        //----------------------------------------------------------------
        public override void Read(BinaryReader reader)
        {
            _guid = reader.ReadInt64();
            _processId = reader.ReadInt32();
            MapName = (eMapName)reader.ReadInt32();
            _config_filename = reader.ReadString();
            _vehicle_type = reader.ReadString();
            _script_server_port = reader.ReadInt32();
            ConnectTime = new DateTime(reader.ReadInt64());
            VehicleVisibleName = reader.ReadString();
            SpawnAreaType = (eSpawnAreaType)reader.ReadInt32();
            SpawnAreaIndex = reader.ReadInt32();
            SpawnPoint.x = reader.ReadSingle();
            SpawnPoint.y = reader.ReadSingle();
            SpawnPoint.z = reader.ReadSingle();
            SpawnSphereRadius = reader.ReadSingle();
            _state = (eClientState)reader.ReadInt32();
        }
        #endregion

        #region [IO 쓰레드] 메시지 파싱
        //----------------------------------------------------------------
        public override void Write(BinaryWriter writer)
        {
            writer.Write(_guid);
            writer.Write(_processId);
            writer.Write((int)MapName);
            writer.Write(_config_filename);
            writer.Write(_vehicle_type);
            writer.Write(_script_server_port);
            writer.Write(ConnectTime.Ticks);
            writer.Write(VehicleVisibleName);
            writer.Write((int)SpawnAreaType);
            writer.Write(SpawnAreaIndex);
            writer.Write(SpawnPoint.x);
            writer.Write(SpawnPoint.y);
            writer.Write(SpawnPoint.z);
            writer.Write(SpawnSphereRadius);
            writer.Write((int)_state);
        }
        #endregion
    }
    public class MdNetData_CustomString : JNetData
    {
        public byte[] m_aData = new byte[32];

        public override void Write(BinaryWriter writer)
        {
            writer.Write(m_aData);
        }
        public override void Read(BinaryReader reader)
        {
            byte[] arr = reader.ReadBytes(32);
            Buffer.BlockCopy(arr, 0, m_aData, 0, sizeof(byte)*32);
        }
        public string ToString()
        {
            string str = Encoding.Default.GetString(m_aData);
            return str;
        }
    }
}
